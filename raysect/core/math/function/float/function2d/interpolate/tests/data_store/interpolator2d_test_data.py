import numpy as np


class TestInterpolatorLoadValues:
    """
    Base class for loading values for a 2D sinc function test.

    Storage for interpolation and extrapolation data to be test against.
    These data are saved to 12 significant figures. self.data is generated by applying the sinc function to an
    (NB_X = 10, NB_Y = 10) dimension xy data, which is used as the spline knots. The precalc_interpolation
    is setup for cubic interpolation separately using the generate_2d_splines script moved into Cherab.
    The data for nearest extrapolation is also generated through Cherab, but linear extrapolation is handled
    differently (Cherab duplicates the edge border to calculate derivatives, these interpolators handle each edge
    as a special case). Linear interpolation is calculated from interp2d(kind=linear), with nearest neighbour
    extrapolation having fill_value=None. Interpolation data is generated on a 13X13 grid. The extrapolation positions
    are 1 point outside from the middle of each edge of the 2D grid in every direction. Linear extrapolation from both
    interpolator types were generated from these interpolators on 12/07/2021, so are not mathematical tests and
    just highlight if something changes unexpectedly.
    """
    def __init__(self):
        # Define in setup_cubic or setup_linear
        self.precalc_interpolation = None

        #: array holding precalculated nearest neighbour extrapolation data
        self.precalc_extrapolation_nearest: np.array = None

        #: array holding precalculated linear extrapolation data
        self.precalc_extrapolation_linear: np.array = None

        #: array holding precalculated quadratic extrapolation data
        self.precalc_extrapolation_quadratic: np.array = None


class TestInterpolatorLoadNormalValues(TestInterpolatorLoadValues):
    """
    Loading normal sized values for a 2D sinc function test.

    For description of data storage, see TestInterpolatorLoadValues.
    """
    def __init__(self):
        super().__init__()
        #: data array from a function sampled on self.x. dtype should be np.float64
        self.data: np.array = np.array(
            [[7.049456954407E-02, -5.031133752816E-03, -8.474851229653E-02, -7.975908114097E-02,
              -4.876973734940E-02, -4.876973734940E-02, -7.975908114097E-02, -8.474851229653E-02,
              -5.031133752816E-03, 7.049456954407E-02],
             [-5.031133752816E-03, -9.121921863446E-02, -9.251264987298E-04, 1.052139178127E-01,
              1.283205555674E-01, 1.283205555674E-01, 1.052139178127E-01, -9.251264987298E-04,
              -9.121921863446E-02, -5.031133752816E-03],
             [-8.474851229653E-02, -9.251264987298E-04, 1.283205555674E-01, 1.734970013481E-02,
              -1.140407180451E-01, -1.140407180451E-01, 1.734970013481E-02, 1.283205555674E-01,
              -9.251264987298E-04, -8.474851229653E-02],
             [-7.975908114097E-02, 1.052139178127E-01, 1.734970013481E-02, -2.145503300375E-01,
              -9.241435356589E-02, -9.241435356589E-02, -2.145503300375E-01, 1.734970013480E-02,
              1.052139178127E-01, -7.975908114097E-02],
             [-4.876973734940E-02, 1.283205555674E-01, -1.140407180451E-01, -9.241435356589E-02,
              6.446759109720E-01, 6.446759109720E-01, -9.241435356589E-02, -1.140407180451E-01,
              1.283205555674E-01, -4.876973734940E-02],
             [-4.876973734940E-02, 1.283205555674E-01, -1.140407180451E-01, -9.241435356589E-02,
              6.446759109720E-01, 6.446759109720E-01, -9.241435356589E-02, -1.140407180451E-01,
              1.283205555674E-01, -4.876973734940E-02],
             [-7.975908114097E-02, 1.052139178127E-01, 1.734970013481E-02, -2.145503300375E-01,
              -9.241435356589E-02, -9.241435356589E-02, -2.145503300375E-01, 1.734970013480E-02,
              1.052139178127E-01, -7.975908114097E-02],
             [-8.474851229653E-02, -9.251264987298E-04, 1.283205555674E-01, 1.734970013480E-02,
              -1.140407180451E-01, -1.140407180451E-01, 1.734970013480E-02, 1.283205555674E-01,
              -9.251264987296E-04, -8.474851229653E-02],
             [-5.031133752816E-03, -9.121921863446E-02, -9.251264987298E-04, 1.052139178127E-01,
              1.283205555674E-01, 1.283205555674E-01, 1.052139178127E-01, -9.251264987296E-04,
              -9.121921863446E-02, -5.031133752816E-03],
             [7.049456954407E-02, -5.031133752816E-03, -8.474851229653E-02, -7.975908114097E-02,
              -4.876973734940E-02, -4.876973734940E-02, -7.975908114097E-02, -8.474851229653E-02,
              -5.031133752816E-03, 7.049456954407E-02]],
            dtype=np.float64
        )

    def setup_cubic(self):
        self.precalc_interpolation = np.array(
            [[7.049456954263E-02, 1.414501923625E-02, -4.992201892798E-02, -9.006647501680E-02,
              -7.975908114097E-02, -5.494750801437E-02, -4.489606937545E-02, -5.494750801435E-02,
              -7.975908114097E-02, -9.006647501693E-02, -4.992201892798E-02, 1.414501923767E-02,
              7.049456954405E-02],
             [1.414501923605E-02, -6.879873015310E-02, -6.604387574170E-02, -9.273861046803E-04,
              7.815453486867E-02, 1.087722976395E-01, 1.179639375775E-01, 1.087722976395E-01,
              7.815453486865E-02, -9.273861047998E-04, -6.604387574172E-02, -6.879873015206E-02,
              1.414501923718E-02],
             [-4.992201892793E-02, -6.604387574169E-02, 7.662704616627E-03, 8.927226959204E-02,
              8.733637329408E-02, 3.144134389937E-02, 8.046419412819E-03, 3.144134389941E-02,
              8.733637329409E-02, 8.927226959202E-02, 7.662704616474E-03, -6.604387574166E-02,
              -4.992201892771E-02],
             [-9.006647501696E-02, -9.273861048698E-04, 8.927226959221E-02, 9.500724468553E-02,
              -3.879550824800E-02, -1.262756473835E-01, -1.571105597160E-01, -1.262756473836E-01,
              -3.879550824809E-02, 9.500724468562E-02, 8.927226959157E-02, -9.273861044683E-04,
              -9.006647501561E-02],
             [-7.975908114100E-02, 7.815453486864E-02, 8.733637329436E-02, -3.879550824802E-02,
              -2.145503300371E-01, -1.226583807440E-01, -7.714735650690E-02, -1.226583807460E-01,
              -2.145503300375E-01, -3.879550824901E-02, 8.733637329762E-02, 7.815453486872E-02,
              -7.975908114039E-02],
             [-5.494750801440E-02, 1.087722976394E-01, 3.144134389962E-02, -1.262756473835E-01,
              -1.226583807429E-01, 3.691392206500E-01, 5.727262813613E-01, 3.691392206475E-01,
              -1.226583807439E-01, -1.262756473872E-01, 3.144134391206E-02, 1.087722976398E-01,
              -5.494750801420E-02],
             [-4.489606937547E-02, 1.179639375774E-01, 8.046419412844E-03, -1.571105597160E-01,
              -7.714735650701E-02, 5.727262813612E-01, 8.385571378575E-01, 5.727262813612E-01,
              -7.714735650690E-02, -1.571105597160E-01, 8.046419413157E-03, 1.179639375770E-01,
              -4.489606937618E-02],
             [-5.494750801430E-02, 1.087722976395E-01, 3.144134390001E-02, -1.262756473835E-01,
              -1.226583807419E-01, 3.691392206490E-01, 5.727262813611E-01, 3.691392206364E-01,
              -1.226583807442E-01, -1.262756473844E-01, 3.144134390361E-02, 1.087722976398E-01,
              -5.494750801408E-02],
             [-7.975908114226E-02, 7.815453486758E-02, 8.733637329316E-02, -3.879550824867E-02,
              -2.145503300372E-01, -1.226583807424E-01, -7.714735650698E-02, -1.226583807482E-01,
              -2.145503300413E-01, -3.879550825780E-02, 8.733637330092E-02, 7.815453489359E-02,
              -7.975908108233E-02],
             [-9.006647501836E-02, -9.273861060066E-04, 8.927226959113E-02, 9.500724468497E-02,
              -3.879550824717E-02, -1.262756473835E-01, -1.571105597161E-01, -1.262756473903E-01,
              -3.879550824831E-02, 9.500724467413E-02, 8.927226957006E-02, -9.273860602121E-04,
              -9.006647496468E-02],
             [-4.992201892777E-02, -6.604387574152E-02, 7.662704615258E-03, 8.927226959362E-02,
              8.733637329806E-02, 3.144134391022E-02, 8.046419412349E-03, 3.144134390902E-02,
              8.733637328552E-02, 8.927226957102E-02, 7.662704628725E-03, -6.604387573864E-02,
              -4.992201892713E-02],
             [1.414501923638E-02, -6.879873015296E-02, -6.604387574257E-02, -9.273861067053E-04,
              7.815453486814E-02, 1.087722976396E-01, 1.179639375771E-01, 1.087722976389E-01,
              7.815453487338E-02, -9.273860952677E-04, -6.604387573003E-02, -6.879873013669E-02,
              1.414501929255E-02],
             [7.049456954365E-02, 1.414501923699E-02, -4.992201892895E-02, -9.006647501957E-02,
              -7.975908114108E-02, -5.494750801466E-02, -4.489606937580E-02, -5.494750801505E-02,
              -7.975908112863E-02, -9.006647503033E-02, -4.992201892673E-02, 1.414501928696E-02,
              7.049456960033E-02]], dtype=np.float64
        )
        # self.precalc_interpolation = np.array(
        #     [[7.049456954407E-02, 1.414501923720E-02, -4.992201892795E-02, -9.006647501703E-02,
        #       -7.975908114097E-02, -5.494750801435E-02, -4.489606937545E-02, -5.494750801435E-02,
        #       -7.975908114097E-02, -9.006647501703E-02, -4.992201892795E-02, 1.414501923720E-02,
        #       7.049456954407E-02],
        #      [1.414501923720E-02, -6.879873015242E-02, -6.604387574169E-02, -9.273861048634E-04,
        #       7.815453486867E-02, 1.087722976395E-01, 1.179639375774E-01, 1.087722976395E-01,
        #       7.815453486867E-02, -9.273861048635E-04, -6.604387574169E-02, -6.879873015242E-02,
        #       1.414501923720E-02],
        #      [-4.992201892795E-02, -6.604387574169E-02, 7.662704616536E-03, 8.927226959205E-02,
        #       8.733637329412E-02, 3.144134389941E-02, 8.046419412818E-03, 3.144134389941E-02,
        #       8.733637329412E-02, 8.927226959205E-02, 7.662704616536E-03, -6.604387574169E-02,
        #       -4.992201892795E-02],
        #      [-9.006647501703E-02, -9.273861048634E-04, 8.927226959205E-02, 9.500724468550E-02,
        #       -3.879550824798E-02, -1.262756473836E-01, -1.571105597160E-01, -1.262756473836E-01,
        #       -3.879550824798E-02, 9.500724468550E-02, 8.927226959205E-02, -9.273861048634E-04,
        #       -9.006647501703E-02],
        #      [-7.975908114097E-02, 7.815453486867E-02, 8.733637329412E-02, -3.879550824798E-02,
        #       -2.145503300375E-01, -1.226583807439E-01, -7.714735650694E-02, -1.226583807439E-01,
        #       -2.145503300375E-01, -3.879550824798E-02, 8.733637329412E-02, 7.815453486867E-02,
        #       -7.975908114097E-02],
        #      [-5.494750801435E-02, 1.087722976395E-01, 3.144134389941E-02, -1.262756473836E-01,
        #       -1.226583807439E-01, 3.691392206491E-01, 5.727262813613E-01, 3.691392206491E-01,
        #       -1.226583807439E-01, -1.262756473836E-01, 3.144134389941E-02, 1.087722976395E-01,
        #       -5.494750801435E-02],
        #      [-4.489606937545E-02, 1.179639375774E-01, 8.046419412818E-03, -1.571105597160E-01,
        #       -7.714735650694E-02, 5.727262813613E-01, 8.385571378575E-01, 5.727262813613E-01,
        #       -7.714735650694E-02, -1.571105597160E-01, 8.046419412818E-03, 1.179639375774E-01,
        #       -4.489606937545E-02],
        #      [-5.494750801435E-02, 1.087722976395E-01, 3.144134389941E-02, -1.262756473836E-01,
        #       -1.226583807439E-01, 3.691392206491E-01, 5.727262813613E-01, 3.691392206491E-01,
        #       -1.226583807439E-01, -1.262756473836E-01, 3.144134389941E-02, 1.087722976395E-01,
        #       -5.494750801435E-02],
        #      [-7.975908114097E-02, 7.815453486867E-02, 8.733637329412E-02, -3.879550824798E-02,
        #       -2.145503300375E-01, -1.226583807439E-01, -7.714735650694E-02, -1.226583807439E-01,
        #       -2.145503300375E-01, -3.879550824798E-02, 8.733637329412E-02, 7.815453486867E-02,
        #       -7.975908114097E-02],
        #      [-9.006647501703E-02, -9.273861048634E-04, 8.927226959205E-02, 9.500724468550E-02,
        #       -3.879550824798E-02, -1.262756473836E-01, -1.571105597160E-01, -1.262756473836E-01,
        #       -3.879550824798E-02, 9.500724468550E-02, 8.927226959205E-02, -9.273861048634E-04,
        #       -9.006647501703E-02],
        #      [-4.992201892795E-02, -6.604387574169E-02, 7.662704616536E-03, 8.927226959205E-02,
        #       8.733637329412E-02, 3.144134389941E-02, 8.046419412818E-03, 3.144134389941E-02,
        #       8.733637329412E-02, 8.927226959205E-02, 7.662704616536E-03, -6.604387574169E-02,
        #       -4.992201892795E-02],
        #      [1.414501923720E-02, -6.879873015242E-02, -6.604387574169E-02, -9.273861048634E-04,
        #       7.815453486867E-02, 1.087722976395E-01, 1.179639375774E-01, 1.087722976395E-01,
        #       7.815453486867E-02, -9.273861048634E-04, -6.604387574169E-02, -6.879873015242E-02,
        #       1.414501923720E-02],
        #      [7.049456954407E-02, 1.414501923720E-02, -4.992201892795E-02, -9.006647501703E-02,
        #       -7.975908114097E-02, -5.494750801435E-02, -4.489606937545E-02, -5.494750801435E-02,
        #       -7.975908114097E-02, -9.006647501703E-02, -4.992201892795E-02, 1.414501923720E-02,
        #       7.049456954407E-02]], dtype=np.float64
        # )

        #: array holding precalculated nearest neighbour extrapolation data
        self.precalc_extrapolation_nearest: np.array = np.array(
            [7.049456954263E-02, -4.489606937545E-02, 7.049456954405E-02, -4.489606937547E-02,
              -4.489606937618E-02, 7.049456954365E-02, -4.489606937580E-02, 7.049456960033E-02], dtype=np.float64
        )
        # self.precalc_extrapolation_nearest: np.array = np.array(
        #     [7.049456954407E-02, -4.489606937545E-02, 7.049456954407E-02, -4.489606937545E-02,
        #      -4.489606937545E-02, 7.049456954407E-02, -4.489606937545E-02, 7.049456954407E-02], dtype=np.float64
        # )

        #: array holding precalculated linear extrapolation data
        self.precalc_extrapolation_linear: np.array = np.array(
            [9.802928389430E-02, -7.659496121465E-02, 9.802928389430E-02, -7.659496121465E-02,
             -7.659496121465E-02, 9.802928389430E-02, -7.659496121465E-02, 9.802928389430E-02], dtype=np.float64
        )

    def setup_linear(self):
        self.precalc_interpolation = np.array(
            [[7.049456954407E-02, 1.385029207141E-02, -4.488982302467E-02, -8.350115450764E-02,
              -7.975908114097E-02, -5.651707329729E-02, -4.876973734940E-02, -5.651707329729E-02,
              -7.975908114097E-02, -8.350115450764E-02, -4.488982302467E-02, 1.385029207141E-02,
              7.049456954407E-02],
             [1.385029207141E-02, -4.879157504269E-02, -4.577658518112E-02, -1.668062692568E-03,
              5.897066807427E-02, 7.777865377223E-02, 8.404798233821E-02, 7.777865377223E-02,
              5.897066807427E-02, -1.668062692568E-03, -4.577658518112E-02, -4.879157504269E-02,
              1.385029207141E-02],
             [-4.488982302467E-02, -4.577658518112E-02, 8.812770983874E-03, 6.309373814419E-02,
              6.128180897374E-02, 2.067539131431E-02, 7.139918761166E-03, 2.067539131431E-02,
              6.128180897374E-02, 6.309373814419E-02, 8.812770983874E-03, -4.577658518112E-02,
              -4.488982302467E-02],
             [-8.350115450764E-02, -1.668062692568E-03, 6.309373814419E-02, 6.527705442988E-02,
              -4.062530740828E-02, -9.163192204604E-02, -1.086341269253E-01, -9.163192204604E-02,
              -4.062530740828E-02, 6.527705442988E-02, 6.309373814419E-02, -1.668062692568E-03,
              -8.350115450764E-02],
             [-7.975908114097E-02, 5.897066807427E-02, 6.128180897374E-02, -4.062530740828E-02,
              -2.145503300375E-01, -1.229483476838E-01, -9.241435356589E-02, -1.229483476838E-01,
              -2.145503300375E-01, -4.062530740828E-02, 6.128180897374E-02, 5.897066807427E-02,
              -7.975908114097E-02],
             [-5.651707329729E-02, 7.777865377223E-02, 2.067539131431E-02, -9.163192204604E-02,
              -1.229483476838E-01, 3.145654217072E-01, 4.604033448375E-01, 3.145654217072E-01,
              -1.229483476838E-01, -9.163192204604E-02, 2.067539131431E-02, 7.777865377223E-02,
              -5.651707329729E-02],
             [-4.876973734940E-02, 8.404798233821E-02, 7.139918761166E-03, -1.086341269253E-01,
              -9.241435356589E-02, 4.604033448375E-01, 6.446759109720E-01, 4.604033448375E-01,
              -9.241435356589E-02, -1.086341269253E-01, 7.139918761166E-03, 8.404798233821E-02,
              -4.876973734940E-02],
             [-5.651707329729E-02, 7.777865377223E-02, 2.067539131431E-02, -9.163192204604E-02,
              -1.229483476838E-01, 3.145654217072E-01, 4.604033448375E-01, 3.145654217072E-01,
              -1.229483476838E-01, -9.163192204604E-02, 2.067539131431E-02, 7.777865377223E-02,
              -5.651707329729E-02],
             [-7.975908114097E-02, 5.897066807427E-02, 6.128180897374E-02, -4.062530740828E-02,
              -2.145503300375E-01, -1.229483476838E-01, -9.241435356589E-02, -1.229483476838E-01,
              -2.145503300375E-01, -4.062530740828E-02, 6.128180897374E-02, 5.897066807427E-02,
              -7.975908114097E-02],
             [-8.350115450764E-02, -1.668062692568E-03, 6.309373814419E-02, 6.527705442988E-02,
              -4.062530740828E-02, -9.163192204604E-02, -1.086341269253E-01, -9.163192204604E-02,
              -4.062530740828E-02, 6.527705442988E-02, 6.309373814419E-02, -1.668062692568E-03,
              -8.350115450764E-02],
             [-4.488982302467E-02, -4.577658518112E-02, 8.812770983874E-03, 6.309373814419E-02,
              6.128180897374E-02, 2.067539131431E-02, 7.139918761166E-03, 2.067539131431E-02,
              6.128180897374E-02, 6.309373814419E-02, 8.812770983874E-03, -4.577658518112E-02,
              -4.488982302467E-02],
             [1.385029207141E-02, -4.879157504269E-02, -4.577658518112E-02, -1.668062692568E-03,
              5.897066807427E-02, 7.777865377223E-02, 8.404798233821E-02, 7.777865377223E-02,
              5.897066807427E-02, -1.668062692568E-03, -4.577658518112E-02, -4.879157504269E-02,
              1.385029207141E-02],
             [7.049456954407E-02, 1.385029207141E-02, -4.488982302467E-02, -8.350115450764E-02,
              -7.975908114097E-02, -5.651707329729E-02, -4.876973734940E-02, -5.651707329729E-02,
              -7.975908114097E-02, -8.350115450764E-02, -4.488982302467E-02, 1.385029207141E-02,
              7.049456954407E-02]], dtype=np.float64
        )
        self.precalc_extrapolation_nearest: np.array = np.array(
            [7.049456954407E-02, -4.876973734940E-02, 7.049456954407E-02, -4.876973734940E-02,
             -4.876973734940E-02, 7.049456954407E-02, -4.876973734940E-02, 7.049456954407E-02], dtype=np.float64
        )

        #: array holding precalculated linear extrapolation data
        self.precalc_extrapolation_linear: np.array = np.array(
            [9.802928389430E-02, -8.064599007443E-02, 9.802928389430E-02, -8.064599007443E-02,
             -8.064599007443E-02, 9.802928389430E-02, -8.064599007443E-02, 9.802928389430E-02], dtype=np.float64
        )


class TestInterpolatorLoadBigValues(TestInterpolatorLoadValues):
    """
    Loading small values (10^-20 times the original) instead of the original 2D sinc function test.

    For description of data storage, see TestInterpolatorLoadValues.
    """
    def __init__(self):
        super().__init__()
        #: data array from a function sampled on self.x. dtype should be np.float64
        # self.data: np.array = np.sin(self.x)
        self.data: np.array = np.array(
            [[7.049456954407E+18, -5.031133752816E+17, -8.474851229653E+18, -7.975908114097E+18,
              -4.876973734940E+18, -4.876973734940E+18, -7.975908114097E+18, -8.474851229653E+18,
              -5.031133752816E+17, 7.049456954407E+18],
             [-5.031133752816E+17, -9.121921863446E+18, -9.251264987298E+16, 1.052139178127E+19,
              1.283205555674E+19, 1.283205555674E+19, 1.052139178127E+19, -9.251264987298E+16,
              -9.121921863446E+18, -5.031133752816E+17],
             [-8.474851229653E+18, -9.251264987298E+16, 1.283205555674E+19, 1.734970013481E+18,
              -1.140407180451E+19, -1.140407180451E+19, 1.734970013481E+18, 1.283205555674E+19,
              -9.251264987298E+16, -8.474851229653E+18],
             [-7.975908114097E+18, 1.052139178127E+19, 1.734970013481E+18, -2.145503300375E+19,
              -9.241435356589E+18, -9.241435356589E+18, -2.145503300375E+19, 1.734970013480E+18,
              1.052139178127E+19, -7.975908114097E+18],
             [-4.876973734940E+18, 1.283205555674E+19, -1.140407180451E+19, -9.241435356589E+18,
              6.446759109720E+19, 6.446759109720E+19, -9.241435356589E+18, -1.140407180451E+19,
              1.283205555674E+19, -4.876973734940E+18],
             [-4.876973734940E+18, 1.283205555674E+19, -1.140407180451E+19, -9.241435356589E+18,
              6.446759109720E+19, 6.446759109720E+19, -9.241435356589E+18, -1.140407180451E+19,
              1.283205555674E+19, -4.876973734940E+18],
             [-7.975908114097E+18, 1.052139178127E+19, 1.734970013481E+18, -2.145503300375E+19,
              -9.241435356589E+18, -9.241435356589E+18, -2.145503300375E+19, 1.734970013480E+18,
              1.052139178127E+19, -7.975908114097E+18],
             [-8.474851229653E+18, -9.251264987298E+16, 1.283205555674E+19, 1.734970013480E+18,
              -1.140407180451E+19, -1.140407180451E+19, 1.734970013480E+18, 1.283205555674E+19,
              -9.251264987296E+16, -8.474851229653E+18],
             [-5.031133752816E+17, -9.121921863446E+18, -9.251264987298E+16, 1.052139178127E+19,
              1.283205555674E+19, 1.283205555674E+19, 1.052139178127E+19, -9.251264987296E+16,
              -9.121921863446E+18, -5.031133752816E+17],
             [7.049456954407E+18, -5.031133752816E+17, -8.474851229653E+18, -7.975908114097E+18,
              -4.876973734940E+18, -4.876973734940E+18, -7.975908114097E+18, -8.474851229653E+18,
              -5.031133752816E+17, 7.049456954407E+18]], dtype=np.float64
        )

        #: array holding precalculated quadratic extrapolation data
        self.precalc_extrapolation_quadratic: np.array = np.array(
            [], dtype=np.float64
        )

    def setup_cubic(self):
        self.precalc_interpolation = np.array(
            [[7.049456954460E+18, 1.414501923721E+18, -4.992201892784E+18, -9.006647501706E+18,
              -7.975908114096E+18, -5.494750801436E+18, -4.489606937545E+18, -5.494750801434E+18,
              -7.975908114100E+18, -9.006647501698E+18, -4.992201892788E+18, 1.414501923683E+18,
              7.049456954376E+18],
             [1.414501923764E+18, -6.879873015236E+18, -6.604387574162E+18, -9.273861048722E+16,
              7.815453486867E+18, 1.087722976395E+19, 1.179639375775E+19, 1.087722976395E+19,
              7.815453486864E+18, -9.273861048516E+16, -6.604387574163E+18, -6.879873015260E+18,
              1.414501923709E+18],
             [-4.992201892782E+18, -6.604387574159E+18, 7.662704616480E+17, 8.927226959209E+18,
              8.733637329413E+18, 3.144134389938E+18, 8.046419412828E+17, 3.144134389934E+18,
              8.733637329421E+18, 8.927226959216E+18, 7.662704616522E+17, -6.604387574177E+18,
              -4.992201892789E+18],
             [-9.006647501668E+18, -9.273861045643E+16, 8.927226959223E+18, 9.500724468548E+18,
              -3.879550824799E+18, -1.262756473835E+19, -1.571105597160E+19, -1.262756473838E+19,
              -3.879550824803E+18, 9.500724468565E+18, 8.927226959332E+18, -9.273861058776E+16,
              -9.006647501760E+18],
             [-7.975908114094E+18, 7.815453486869E+18, 8.733637329383E+18, -3.879550824786E+18,
              -2.145503300374E+19, -1.226583807440E+19, -7.714735650690E+18, -1.226583807425E+19,
              -2.145503300392E+19, -3.879550825037E+18, 8.733637328991E+18, 7.815453486779E+18,
              -7.975908114134E+18],
             [-5.494750801433E+18, 1.087722976395E+19, 3.144134389889E+18, -1.262756473834E+19,
              -1.226583807434E+19, 3.691392206497E+19, 5.727262813613E+19, 3.691392206533E+19,
              -1.226583807459E+19, -1.262756473889E+19, 3.144134390513E+18, 1.087722976389E+19,
              -5.494750801509E+18],
             [-4.489606937542E+18, 1.179639375775E+19, 8.046419412881E+17, -1.571105597160E+19,
              -7.714735650701E+18, 5.727262813612E+19, 8.385571378575E+19, 5.727262813618E+19,
              -7.714735650696E+18, -1.571105597161E+19, 8.046419412838E+17, 1.179639375773E+19,
              -4.489606937591E+18],
             [-5.494750801434E+18, 1.087722976395E+19, 3.144134390093E+18, -1.262756473833E+19,
              -1.226583807460E+19, 3.691392206464E+19, 5.727262813614E+19, 3.691392206388E+19,
              -1.226583807413E+19, -1.262756473809E+19, 3.144134391132E+18, 1.087722976399E+19,
              -5.494750801389E+18],
             [-7.975908114416E+18, 7.815453486610E+18, 8.733637329526E+18, -3.879550824930E+18,
              -2.145503300385E+19, -1.226583807444E+19, -7.714735650699E+18, -1.226583807452E+19,
              -2.145503300371E+19, -3.879550825350E+18, 8.733637329826E+18, 7.815453486864E+18,
              -7.975908110886E+18],
             [-9.006647502091E+18, -9.273861080508E+16, 8.927226959362E+18, 9.500724468432E+18,
              -3.879550824923E+18, -1.262756473862E+19, -1.571105597161E+19, -1.262756473885E+19,
              -3.879550824244E+18, 9.500724467988E+18, 8.927226956139E+18, -9.273860862352E+16,
              -9.006647499242E+18],
             [-4.992201892748E+18, -6.604387574117E+18, 7.662704614151E+17, 8.927226959268E+18,
              8.733637329008E+18, 3.144134390448E+18, 8.046419412263E+17, 3.144134389968E+18,
              8.733637329917E+18, 8.927226958675E+18, 7.662704629822E+17, -6.604387573416E+18,
              -4.992201892348E+18],
             [1.414501923439E+18, -6.879873015445E+18, -6.604387573988E+18, -9.273861059517E+16,
              7.815453486837E+18, 1.087722976397E+19, 1.179639375772E+19, 1.087722976397E+19,
              7.815453486894E+18, -9.273860926067E+16, -6.604387573672E+18, -6.879873017304E+18,
              1.414501925358E+18],
             [7.049456954108E+18, 1.414501923499E+18, -4.992201892571E+18, -9.006647501872E+18,
              -7.975908114100E+18, -5.494750801478E+18, -4.489606937572E+18, -5.494750801431E+18,
              -7.975908113487E+18, -9.006647502955E+18, -4.992201893463E+18, 1.414501925348E+18,
              7.049456956398E+18]], dtype=np.float64
        )
        # self.precalc_interpolation = np.array(
        #     [[7.049456954407E+18, 1.414501923720E+18, -4.992201892795E+18, -9.006647501703E+18,
        #       -7.975908114097E+18, -5.494750801435E+18, -4.489606937545E+18, -5.494750801435E+18,
        #       -7.975908114097E+18, -9.006647501703E+18, -4.992201892795E+18, 1.414501923720E+18,
        #       7.049456954407E+18],
        #      [1.414501923720E+18, -6.879873015242E+18, -6.604387574169E+18, -9.273861048635E+16,
        #       7.815453486867E+18, 1.087722976395E+19, 1.179639375774E+19, 1.087722976395E+19,
        #       7.815453486867E+18, -9.273861048635E+16, -6.604387574169E+18, -6.879873015242E+18,
        #       1.414501923720E+18],
        #      [-4.992201892795E+18, -6.604387574169E+18, 7.662704616536E+17, 8.927226959205E+18,
        #       8.733637329412E+18, 3.144134389941E+18, 8.046419412818E+17, 3.144134389941E+18,
        #       8.733637329412E+18, 8.927226959205E+18, 7.662704616536E+17, -6.604387574169E+18,
        #       -4.992201892795E+18],
        #      [-9.006647501703E+18, -9.273861048635E+16, 8.927226959205E+18, 9.500724468550E+18,
        #       -3.879550824798E+18, -1.262756473836E+19, -1.571105597160E+19, -1.262756473836E+19,
        #       -3.879550824798E+18, 9.500724468550E+18, 8.927226959205E+18, -9.273861048634E+16,
        #       -9.006647501703E+18],
        #      [-7.975908114097E+18, 7.815453486867E+18, 8.733637329412E+18, -3.879550824798E+18,
        #       -2.145503300375E+19, -1.226583807439E+19, -7.714735650694E+18, -1.226583807439E+19,
        #       -2.145503300375E+19, -3.879550824798E+18, 8.733637329412E+18, 7.815453486867E+18,
        #       -7.975908114097E+18],
        #      [-5.494750801435E+18, 1.087722976395E+19, 3.144134389941E+18, -1.262756473836E+19,
        #       -1.226583807439E+19, 3.691392206491E+19, 5.727262813613E+19, 3.691392206491E+19,
        #       -1.226583807439E+19, -1.262756473836E+19, 3.144134389941E+18, 1.087722976395E+19,
        #       -5.494750801435E+18],
        #      [-4.489606937545E+18, 1.179639375774E+19, 8.046419412818E+17, -1.571105597160E+19,
        #       -7.714735650694E+18, 5.727262813613E+19, 8.385571378575E+19, 5.727262813613E+19,
        #       -7.714735650694E+18, -1.571105597160E+19, 8.046419412818E+17, 1.179639375774E+19,
        #       -4.489606937545E+18],
        #      [-5.494750801435E+18, 1.087722976395E+19, 3.144134389941E+18, -1.262756473836E+19,
        #       -1.226583807439E+19, 3.691392206491E+19, 5.727262813613E+19, 3.691392206491E+19,
        #       -1.226583807439E+19, -1.262756473836E+19, 3.144134389941E+18, 1.087722976395E+19,
        #       -5.494750801435E+18],
        #      [-7.975908114097E+18, 7.815453486867E+18, 8.733637329412E+18, -3.879550824798E+18,
        #       -2.145503300375E+19, -1.226583807439E+19, -7.714735650694E+18, -1.226583807439E+19,
        #       -2.145503300375E+19, -3.879550824798E+18, 8.733637329412E+18, 7.815453486867E+18,
        #       -7.975908114097E+18],
        #      [-9.006647501703E+18, -9.273861048635E+16, 8.927226959205E+18, 9.500724468550E+18,
        #       -3.879550824798E+18, -1.262756473836E+19, -1.571105597160E+19, -1.262756473836E+19,
        #       -3.879550824798E+18, 9.500724468550E+18, 8.927226959205E+18, -9.273861048633E+16,
        #       -9.006647501703E+18],
        #      [-4.992201892795E+18, -6.604387574169E+18, 7.662704616536E+17, 8.927226959205E+18,
        #       8.733637329412E+18, 3.144134389941E+18, 8.046419412818E+17, 3.144134389941E+18,
        #       8.733637329412E+18, 8.927226959205E+18, 7.662704616536E+17, -6.604387574169E+18,
        #       -4.992201892795E+18],
        #      [1.414501923720E+18, -6.879873015242E+18, -6.604387574169E+18, -9.273861048634E+16,
        #       7.815453486867E+18, 1.087722976395E+19, 1.179639375774E+19, 1.087722976395E+19,
        #       7.815453486867E+18, -9.273861048634E+16, -6.604387574169E+18, -6.879873015242E+18,
        #       1.414501923720E+18],
        #      [7.049456954407E+18, 1.414501923720E+18, -4.992201892795E+18, -9.006647501703E+18,
        #       -7.975908114097E+18, -5.494750801435E+18, -4.489606937545E+18, -5.494750801435E+18,
        #       -7.975908114097E+18, -9.006647501703E+18, -4.992201892795E+18, 1.414501923720E+18,
        #       7.049456954407E+18]], dtype=np.float64
        # )
        self.precalc_extrapolation_nearest: np.array = np.array(
            [7.049456954460E+18, -4.489606937545E+18, 7.049456954376E+18, -4.489606937542E+18,
             -4.489606937591E+18, 7.049456954108E+18, -4.489606937572E+18, 7.049456956398E+18], dtype=np.float64
        )
        # self.precalc_extrapolation_nearest: np.array = np.array(
        #     [7.049456954407E+18, -4.489606937545E+18, 7.049456954407E+18, -4.489606937545E+18,
        #      -4.489606937545E+18, 7.049456954407E+18, -4.489606937545E+18, 7.049456954407E+18], dtype=np.float64
        # )

        #: array holding precalculated linear extrapolation data
        self.precalc_extrapolation_linear: np.array = np.array(
            [9.802928389430E+18, -7.659496121465E+18, 9.802928389430E+18, -7.659496121465E+18,
             -7.659496121465E+18, 9.802928389430E+18, -7.659496121465E+18, 9.802928389430E+18], dtype=np.float64
        )

    def setup_linear(self):
        self.precalc_interpolation = np.array(
            [[7.049456954407E+18, 1.385029207141E+18, -4.488982302467E+18, -8.350115450764E+18,
              -7.975908114097E+18, -5.651707329729E+18, -4.876973734940E+18, -5.651707329729E+18,
              -7.975908114097E+18, -8.350115450764E+18, -4.488982302467E+18, 1.385029207141E+18,
              7.049456954407E+18],
             [1.385029207141E+18, -4.879157504269E+18, -4.577658518112E+18, -1.668062692568E+17,
              5.897066807427E+18, 7.777865377223E+18, 8.404798233821E+18, 7.777865377223E+18,
              5.897066807427E+18, -1.668062692568E+17, -4.577658518112E+18, -4.879157504269E+18,
              1.385029207141E+18],
             [-4.488982302467E+18, -4.577658518112E+18, 8.812770983874E+17, 6.309373814419E+18,
              6.128180897374E+18, 2.067539131431E+18, 7.139918761166E+17, 2.067539131431E+18,
              6.128180897374E+18, 6.309373814419E+18, 8.812770983874E+17, -4.577658518112E+18,
              -4.488982302467E+18],
             [-8.350115450764E+18, -1.668062692568E+17, 6.309373814419E+18, 6.527705442988E+18,
              -4.062530740828E+18, -9.163192204604E+18, -1.086341269253E+19, -9.163192204604E+18,
              -4.062530740828E+18, 6.527705442988E+18, 6.309373814419E+18, -1.668062692568E+17,
              -8.350115450764E+18],
             [-7.975908114097E+18, 5.897066807427E+18, 6.128180897374E+18, -4.062530740828E+18,
              -2.145503300375E+19, -1.229483476838E+19, -9.241435356589E+18, -1.229483476838E+19,
              -2.145503300375E+19, -4.062530740828E+18, 6.128180897374E+18, 5.897066807427E+18,
              -7.975908114097E+18],
             [-5.651707329729E+18, 7.777865377223E+18, 2.067539131431E+18, -9.163192204604E+18,
              -1.229483476838E+19, 3.145654217072E+19, 4.604033448375E+19, 3.145654217072E+19,
              -1.229483476838E+19, -9.163192204604E+18, 2.067539131431E+18, 7.777865377223E+18,
              -5.651707329729E+18],
             [-4.876973734940E+18, 8.404798233821E+18, 7.139918761166E+17, -1.086341269253E+19,
              -9.241435356589E+18, 4.604033448375E+19, 6.446759109720E+19, 4.604033448375E+19,
              -9.241435356589E+18, -1.086341269253E+19, 7.139918761166E+17, 8.404798233821E+18,
              -4.876973734940E+18],
             [-5.651707329729E+18, 7.777865377223E+18, 2.067539131431E+18, -9.163192204604E+18,
              -1.229483476838E+19, 3.145654217072E+19, 4.604033448375E+19, 3.145654217072E+19,
              -1.229483476838E+19, -9.163192204604E+18, 2.067539131431E+18, 7.777865377223E+18,
              -5.651707329729E+18],
             [-7.975908114097E+18, 5.897066807427E+18, 6.128180897374E+18, -4.062530740828E+18,
              -2.145503300375E+19, -1.229483476838E+19, -9.241435356589E+18, -1.229483476838E+19,
              -2.145503300375E+19, -4.062530740828E+18, 6.128180897374E+18, 5.897066807427E+18,
              -7.975908114097E+18],
             [-8.350115450764E+18, -1.668062692568E+17, 6.309373814419E+18, 6.527705442988E+18,
              -4.062530740828E+18, -9.163192204604E+18, -1.086341269253E+19, -9.163192204604E+18,
              -4.062530740828E+18, 6.527705442988E+18, 6.309373814419E+18, -1.668062692568E+17,
              -8.350115450764E+18],
             [-4.488982302467E+18, -4.577658518112E+18, 8.812770983874E+17, 6.309373814419E+18,
              6.128180897374E+18, 2.067539131431E+18, 7.139918761166E+17, 2.067539131431E+18,
              6.128180897374E+18, 6.309373814419E+18, 8.812770983874E+17, -4.577658518112E+18,
              -4.488982302467E+18],
             [1.385029207141E+18, -4.879157504269E+18, -4.577658518112E+18, -1.668062692568E+17,
              5.897066807427E+18, 7.777865377223E+18, 8.404798233821E+18, 7.777865377223E+18,
              5.897066807427E+18, -1.668062692568E+17, -4.577658518112E+18, -4.879157504269E+18,
              1.385029207141E+18],
             [7.049456954407E+18, 1.385029207141E+18, -4.488982302467E+18, -8.350115450764E+18,
              -7.975908114097E+18, -5.651707329729E+18, -4.876973734940E+18, -5.651707329729E+18,
              -7.975908114097E+18, -8.350115450764E+18, -4.488982302467E+18, 1.385029207141E+18,
              7.049456954407E+18]], dtype=np.float64
        )
        self.precalc_extrapolation_nearest: np.array = np.array(
            [7.049456954407E+18, -4.876973734940E+18, 7.049456954407E+18, -4.876973734940E+18,
             -4.876973734940E+18, 7.049456954407E+18, -4.876973734940E+18, 7.049456954407E+18], dtype=np.float64
        )

        #: array holding precalculated linear extrapolation data
        self.precalc_extrapolation_linear: np.array = np.array(
            [9.802928389430E+18, -8.064599007443E+18, 9.802928389430E+18, -8.064599007443E+18,
             -8.064599007443E+18, 9.802928389430E+18, -8.064599007443E+18, 9.802928389430E+18], dtype=np.float64
        )


class TestInterpolatorLoadSmallValues(TestInterpolatorLoadValues):
    """
    Loading small values (10^-20 times the original) instead of the original np.sin(x)

    These data are saved to 12 significant figures.
    """
    def __init__(self):
        super().__init__()
        #: data array from a function sampled on self.x. dtype should be np.float64
        # self.data: np.array = np.sin(self.x)
        self.data: np.array = np.array(
            [[7.049456954407E-22, -5.031133752816E-23, -8.474851229653E-22, -7.975908114097E-22,
              -4.876973734940E-22, -4.876973734940E-22, -7.975908114097E-22, -8.474851229653E-22,
              -5.031133752816E-23, 7.049456954407E-22],
             [-5.031133752816E-23, -9.121921863446E-22, -9.251264987298E-24, 1.052139178127E-21,
              1.283205555674E-21, 1.283205555674E-21, 1.052139178127E-21, -9.251264987298E-24,
              -9.121921863446E-22, -5.031133752816E-23],
             [-8.474851229653E-22, -9.251264987298E-24, 1.283205555674E-21, 1.734970013481E-22,
              -1.140407180451E-21, -1.140407180451E-21, 1.734970013481E-22, 1.283205555674E-21,
              -9.251264987298E-24, -8.474851229653E-22],
             [-7.975908114097E-22, 1.052139178127E-21, 1.734970013481E-22, -2.145503300375E-21,
              -9.241435356589E-22, -9.241435356589E-22, -2.145503300375E-21, 1.734970013480E-22,
              1.052139178127E-21, -7.975908114097E-22],
             [-4.876973734940E-22, 1.283205555674E-21, -1.140407180451E-21, -9.241435356589E-22,
              6.446759109720E-21, 6.446759109720E-21, -9.241435356589E-22, -1.140407180451E-21,
              1.283205555674E-21, -4.876973734940E-22],
             [-4.876973734940E-22, 1.283205555674E-21, -1.140407180451E-21, -9.241435356589E-22,
              6.446759109720E-21, 6.446759109720E-21, -9.241435356589E-22, -1.140407180451E-21,
              1.283205555674E-21, -4.876973734940E-22],
             [-7.975908114097E-22, 1.052139178127E-21, 1.734970013481E-22, -2.145503300375E-21,
              -9.241435356589E-22, -9.241435356589E-22, -2.145503300375E-21, 1.734970013480E-22,
              1.052139178127E-21, -7.975908114097E-22],
             [-8.474851229653E-22, -9.251264987298E-24, 1.283205555674E-21, 1.734970013480E-22,
              -1.140407180451E-21, -1.140407180451E-21, 1.734970013480E-22, 1.283205555674E-21,
              -9.251264987296E-24, -8.474851229653E-22],
             [-5.031133752816E-23, -9.121921863446E-22, -9.251264987298E-24, 1.052139178127E-21,
              1.283205555674E-21, 1.283205555674E-21, 1.052139178127E-21, -9.251264987296E-24,
              -9.121921863446E-22, -5.031133752816E-23],
             [7.049456954407E-22, -5.031133752816E-23, -8.474851229653E-22, -7.975908114097E-22,
              -4.876973734940E-22, -4.876973734940E-22, -7.975908114097E-22, -8.474851229653E-22,
              -5.031133752816E-23, 7.049456954407E-22]], dtype=np.float64
        )

        #: array holding precalculated quadratic extrapolation data
        self.precalc_extrapolation_quadratic: np.array = np.array(
            [], dtype=np.float64
        )

    def setup_cubic(self):
        self.precalc_interpolation = np.array(
            [[7.049456954264E-22, 1.414501923508E-22, -4.992201892787E-22, -9.006647501692E-22,
              -7.975908114097E-22, -5.494750801435E-22, -4.489606937545E-22, -5.494750801436E-22,
              -7.975908114100E-22, -9.006647501711E-22, -4.992201892810E-22, 1.414501923847E-22,
              7.049456954556E-22],
             [1.414501923618E-22, -6.879873015399E-22, -6.604387574163E-22, -9.273861047815E-24,
              7.815453486868E-22, 1.087722976395E-21, 1.179639375774E-21, 1.087722976395E-21,
              7.815453486864E-22, -9.273861049481E-24, -6.604387574180E-22, -6.879873015137E-22,
              1.414501923837E-22],
             [-4.992201892795E-22, -6.604387574171E-22, 7.662704616648E-23, 8.927226959196E-22,
              8.733637329416E-22, 3.144134389939E-22, 8.046419412826E-23, 3.144134389938E-22,
              8.733637329419E-22, 8.927226959212E-22, 7.662704616608E-23, -6.604387574155E-22,
              -4.992201892762E-22],
             [-9.006647501697E-22, -9.273861047635E-24, 8.927226959229E-22, 9.500724468556E-22,
              -3.879550824799E-22, -1.262756473835E-21, -1.571105597160E-21, -1.262756473839E-21,
              -3.879550824817E-22, 9.500724468550E-22, 8.927226959408E-22, -9.273861038222E-24,
              -9.006647501493E-22],
             [-7.975908114093E-22, 7.815453486870E-22, 8.733637329381E-22, -3.879550824787E-22,
              -2.145503300374E-21, -1.226583807440E-21, -7.714735650690E-22, -1.226583807454E-21,
              -2.145503300370E-21, -3.879550824826E-22, 8.733637328991E-22, 7.815453486854E-22,
              -7.975908114063E-22],
             [-5.494750801431E-22, 1.087722976395E-21, 3.144134389893E-22, -1.262756473834E-21,
              -1.226583807434E-21, 3.691392206497E-21, 5.727262813613E-21, 3.691392206474E-21,
              -1.226583807439E-21, -1.262756473868E-21, 3.144134390512E-22, 1.087722976396E-21,
              -5.494750801446E-22],
             [-4.489606937538E-22, 1.179639375775E-21, 8.046419412696E-23, -1.571105597160E-21,
              -7.714735650701E-22, 5.727262813612E-21, 8.385571378575E-21, 5.727262813618E-21,
              -7.714735650696E-22, -1.571105597161E-21, 8.046419412846E-23, 1.179639375773E-21,
              -4.489606937591E-22],
             [-5.494750801434E-22, 1.087722976395E-21, 3.144134390008E-22, -1.262756473844E-21,
              -1.226583807433E-21, 3.691392206488E-21, 5.727262813614E-21, 3.691392206419E-21,
              -1.226583807457E-21, -1.262756473861E-21, 3.144134391132E-22, 1.087722976390E-21,
              -5.494750801485E-22],
             [-7.975908114306E-22, 7.815453486712E-22, 8.733637329342E-22, -3.879550824792E-22,
              -2.145503300377E-21, -1.226583807429E-21, -7.714735650699E-22, -1.226583807452E-21,
              -2.145503300310E-21, -3.879550824614E-22, 8.733637328587E-22, 7.815453486866E-22,
              -7.975908110894E-22],
             [-9.006647501952E-22, -9.273861067304E-24, 8.927226959138E-22, 9.500724468601E-22,
              -3.879550824810E-22, -1.262756473846E-21, -1.571105597161E-21, -1.262756473885E-21,
              -3.879550824035E-22, 9.500724468340E-22, 8.927226955189E-22, -9.273860862048E-24,
              -9.006647499257E-22],
             [-4.992201892821E-22, -6.604387574194E-22, 7.662704617160E-23, 8.927226959387E-22,
              8.733637329469E-22, 3.144134390697E-22, 8.046419413383E-23, 3.144134392460E-22,
              8.733637329685E-22, 8.927226958359E-22, 7.662704629676E-23, -6.604387573915E-22,
              -4.992201893027E-22],
             [1.414501923332E-22, -6.879873015551E-22, -6.604387574050E-22, -9.273861079956E-24,
              7.815453486878E-22, 1.087722976402E-21, 1.179639375773E-21, 1.087722976395E-21,
              7.815453486844E-22, -9.273860941952E-24, -6.604387571973E-22, -6.879873019460E-22,
              1.414501922245E-22],
             [7.049456953963E-22, 1.414501923357E-22, -4.992201892648E-22, -9.006647502111E-22,
              -7.975908114054E-22, -5.494750801416E-22, -4.489606937555E-22, -5.494750801446E-22,
              -7.975908113966E-22, -9.006647503577E-22, -4.992201891716E-22, 1.414501923407E-22,
              7.049456953362E-22]], dtype=np.float64
        )
        # self.precalc_interpolation = np.array(
        #     [[7.049456954407E-22, 1.414501923720E-22, -4.992201892795E-22, -9.006647501703E-22,
        #       -7.975908114097E-22, -5.494750801435E-22, -4.489606937545E-22, -5.494750801435E-22,
        #       -7.975908114097E-22, -9.006647501703E-22, -4.992201892795E-22, 1.414501923720E-22,
        #       7.049456954407E-22],
        #      [1.414501923720E-22, -6.879873015242E-22, -6.604387574169E-22, -9.273861048634E-24,
        #       7.815453486867E-22, 1.087722976395E-21, 1.179639375774E-21, 1.087722976395E-21,
        #       7.815453486867E-22, -9.273861048636E-24, -6.604387574169E-22, -6.879873015242E-22,
        #       1.414501923720E-22],
        #      [-4.992201892795E-22, -6.604387574169E-22, 7.662704616536E-23, 8.927226959205E-22,
        #       8.733637329412E-22, 3.144134389941E-22, 8.046419412818E-23, 3.144134389941E-22,
        #       8.733637329412E-22, 8.927226959205E-22, 7.662704616536E-23, -6.604387574169E-22,
        #       -4.992201892795E-22],
        #      [-9.006647501703E-22, -9.273861048634E-24, 8.927226959205E-22, 9.500724468550E-22,
        #       -3.879550824798E-22, -1.262756473836E-21, -1.571105597160E-21, -1.262756473836E-21,
        #       -3.879550824798E-22, 9.500724468550E-22, 8.927226959205E-22, -9.273861048634E-24,
        #       -9.006647501703E-22],
        #      [-7.975908114097E-22, 7.815453486867E-22, 8.733637329412E-22, -3.879550824798E-22,
        #       -2.145503300375E-21, -1.226583807439E-21, -7.714735650694E-22, -1.226583807439E-21,
        #       -2.145503300375E-21, -3.879550824798E-22, 8.733637329412E-22, 7.815453486867E-22,
        #       -7.975908114097E-22],
        #      [-5.494750801435E-22, 1.087722976395E-21, 3.144134389941E-22, -1.262756473836E-21,
        #       -1.226583807439E-21, 3.691392206491E-21, 5.727262813613E-21, 3.691392206491E-21,
        #       -1.226583807439E-21, -1.262756473836E-21, 3.144134389941E-22, 1.087722976395E-21,
        #       -5.494750801435E-22],
        #      [-4.489606937545E-22, 1.179639375774E-21, 8.046419412818E-23, -1.571105597160E-21,
        #       -7.714735650694E-22, 5.727262813613E-21, 8.385571378575E-21, 5.727262813613E-21,
        #       -7.714735650694E-22, -1.571105597160E-21, 8.046419412818E-23, 1.179639375774E-21,
        #       -4.489606937545E-22],
        #      [-5.494750801435E-22, 1.087722976395E-21, 3.144134389941E-22, -1.262756473836E-21,
        #       -1.226583807439E-21, 3.691392206491E-21, 5.727262813613E-21, 3.691392206491E-21,
        #       -1.226583807439E-21, -1.262756473836E-21, 3.144134389941E-22, 1.087722976395E-21,
        #       -5.494750801435E-22],
        #      [-7.975908114097E-22, 7.815453486867E-22, 8.733637329412E-22, -3.879550824798E-22,
        #       -2.145503300375E-21, -1.226583807439E-21, -7.714735650694E-22, -1.226583807439E-21,
        #       -2.145503300375E-21, -3.879550824798E-22, 8.733637329412E-22, 7.815453486867E-22,
        #       -7.975908114097E-22],
        #      [-9.006647501703E-22, -9.273861048636E-24, 8.927226959205E-22, 9.500724468550E-22,
        #       -3.879550824798E-22, -1.262756473836E-21, -1.571105597160E-21, -1.262756473836E-21,
        #       -3.879550824798E-22, 9.500724468550E-22, 8.927226959205E-22, -9.273861048634E-24,
        #       -9.006647501703E-22],
        #      [-4.992201892795E-22, -6.604387574169E-22, 7.662704616536E-23, 8.927226959205E-22,
        #       8.733637329412E-22, 3.144134389941E-22, 8.046419412818E-23, 3.144134389941E-22,
        #       8.733637329412E-22, 8.927226959205E-22, 7.662704616536E-23, -6.604387574169E-22,
        #       -4.992201892795E-22],
        #      [1.414501923720E-22, -6.879873015242E-22, -6.604387574169E-22, -9.273861048634E-24,
        #       7.815453486867E-22, 1.087722976395E-21, 1.179639375774E-21, 1.087722976395E-21,
        #       7.815453486867E-22, -9.273861048634E-24, -6.604387574169E-22, -6.879873015242E-22,
        #       1.414501923720E-22],
        #      [7.049456954407E-22, 1.414501923720E-22, -4.992201892795E-22, -9.006647501703E-22,
        #       -7.975908114097E-22, -5.494750801435E-22, -4.489606937545E-22, -5.494750801435E-22,
        #       -7.975908114097E-22, -9.006647501703E-22, -4.992201892795E-22, 1.414501923720E-22,
        #       7.049456954407E-22]], dtype=np.float64
        # )
        #: array holding precalculated nearest neighbour extrapolation data
        self.precalc_extrapolation_nearest: np.array = np.array(
            [7.049456954264E-22, -4.489606937545E-22, 7.049456954556E-22, -4.489606937538E-22,
             -4.489606937591E-22, 7.049456953963E-22, -4.489606937555E-22, 7.049456953362E-22], dtype=np.float64
        )
        # self.precalc_extrapolation_nearest: np.array = np.array(
        #     [7.049456954407E-22, -4.489606937545E-22, 7.049456954407E-22, -4.489606937545E-22,
        #      -4.489606937545E-22, 7.049456954407E-22, -4.489606937545E-22, 7.049456954407E-22], dtype=np.float64
        # )
        #: array holding precalculated linear extrapolation data
        self.precalc_extrapolation_linear: np.array = np.array(
            [9.802928389430E-22, -7.659496121465E-22, 9.802928389430E-22, -7.659496121465E-22,
             -7.659496121465E-22, 9.802928389430E-22, -7.659496121465E-22, 9.802928389430E-22], dtype=np.float64
        )

    def setup_linear(self):
        self.precalc_interpolation = np.array(
            [[7.049456954407E-22, 1.385029207141E-22, -4.488982302467E-22, -8.350115450764E-22,
              -7.975908114097E-22, -5.651707329729E-22, -4.876973734940E-22, -5.651707329729E-22,
              -7.975908114097E-22, -8.350115450764E-22, -4.488982302467E-22, 1.385029207141E-22,
              7.049456954407E-22],
             [1.385029207141E-22, -4.879157504269E-22, -4.577658518112E-22, -1.668062692568E-23,
              5.897066807427E-22, 7.777865377223E-22, 8.404798233821E-22, 7.777865377223E-22,
              5.897066807427E-22, -1.668062692568E-23, -4.577658518112E-22, -4.879157504269E-22,
              1.385029207141E-22],
             [-4.488982302467E-22, -4.577658518112E-22, 8.812770983874E-23, 6.309373814419E-22,
              6.128180897374E-22, 2.067539131431E-22, 7.139918761166E-23, 2.067539131431E-22,
              6.128180897374E-22, 6.309373814419E-22, 8.812770983874E-23, -4.577658518112E-22,
              -4.488982302467E-22],
             [-8.350115450764E-22, -1.668062692568E-23, 6.309373814419E-22, 6.527705442988E-22,
              -4.062530740828E-22, -9.163192204604E-22, -1.086341269253E-21, -9.163192204604E-22,
              -4.062530740828E-22, 6.527705442988E-22, 6.309373814419E-22, -1.668062692568E-23,
              -8.350115450764E-22],
             [-7.975908114097E-22, 5.897066807427E-22, 6.128180897374E-22, -4.062530740828E-22,
              -2.145503300375E-21, -1.229483476838E-21, -9.241435356589E-22, -1.229483476838E-21,
              -2.145503300375E-21, -4.062530740828E-22, 6.128180897374E-22, 5.897066807427E-22,
              -7.975908114097E-22],
             [-5.651707329729E-22, 7.777865377223E-22, 2.067539131431E-22, -9.163192204604E-22,
              -1.229483476838E-21, 3.145654217072E-21, 4.604033448375E-21, 3.145654217072E-21,
              -1.229483476838E-21, -9.163192204604E-22, 2.067539131431E-22, 7.777865377223E-22,
              -5.651707329729E-22],
             [-4.876973734940E-22, 8.404798233821E-22, 7.139918761166E-23, -1.086341269253E-21,
              -9.241435356589E-22, 4.604033448375E-21, 6.446759109720E-21, 4.604033448375E-21,
              -9.241435356589E-22, -1.086341269253E-21, 7.139918761166E-23, 8.404798233821E-22,
              -4.876973734940E-22],
             [-5.651707329729E-22, 7.777865377223E-22, 2.067539131431E-22, -9.163192204604E-22,
              -1.229483476838E-21, 3.145654217072E-21, 4.604033448375E-21, 3.145654217072E-21,
              -1.229483476838E-21, -9.163192204604E-22, 2.067539131431E-22, 7.777865377223E-22,
              -5.651707329729E-22],
             [-7.975908114097E-22, 5.897066807427E-22, 6.128180897374E-22, -4.062530740828E-22,
              -2.145503300375E-21, -1.229483476838E-21, -9.241435356589E-22, -1.229483476838E-21,
              -2.145503300375E-21, -4.062530740828E-22, 6.128180897374E-22, 5.897066807427E-22,
              -7.975908114097E-22],
             [-8.350115450764E-22, -1.668062692568E-23, 6.309373814419E-22, 6.527705442988E-22,
              -4.062530740828E-22, -9.163192204604E-22, -1.086341269253E-21, -9.163192204604E-22,
              -4.062530740828E-22, 6.527705442988E-22, 6.309373814419E-22, -1.668062692568E-23,
              -8.350115450764E-22],
             [-4.488982302467E-22, -4.577658518112E-22, 8.812770983874E-23, 6.309373814419E-22,
              6.128180897374E-22, 2.067539131431E-22, 7.139918761166E-23, 2.067539131431E-22,
              6.128180897374E-22, 6.309373814419E-22, 8.812770983874E-23, -4.577658518112E-22,
              -4.488982302467E-22],
             [1.385029207141E-22, -4.879157504269E-22, -4.577658518112E-22, -1.668062692568E-23,
              5.897066807427E-22, 7.777865377223E-22, 8.404798233821E-22, 7.777865377223E-22,
              5.897066807427E-22, -1.668062692568E-23, -4.577658518112E-22, -4.879157504269E-22,
              1.385029207141E-22],
             [7.049456954407E-22, 1.385029207141E-22, -4.488982302467E-22, -8.350115450764E-22,
              -7.975908114097E-22, -5.651707329729E-22, -4.876973734940E-22, -5.651707329729E-22,
              -7.975908114097E-22, -8.350115450764E-22, -4.488982302467E-22, 1.385029207141E-22,
              7.049456954407E-22]], dtype=np.float64
        )
        #: array holding precalculated nearest neighbour extrapolation data
        self.precalc_extrapolation_nearest: np.array = np.array(
            [7.049456954407E-22, -4.876973734940E-22, 7.049456954407E-22, -4.876973734940E-22,
             -4.876973734940E-22, 7.049456954407E-22, -4.876973734940E-22, 7.049456954407E-22], dtype=np.float64
        )
        #: array holding precalculated linear extrapolation data
        self.precalc_extrapolation_linear: np.array = np.array(
            [9.802928389430E-22, -8.064599007443E-22, 9.802928389430E-22, -8.064599007443E-22,
             -8.064599007443E-22, 9.802928389430E-22, -8.064599007443E-22, 9.802928389430E-22], dtype=np.float64
        )
